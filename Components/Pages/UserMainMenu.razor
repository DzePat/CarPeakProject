@page "/UserMainMenu"
@using CarPeak.Components.Classes;
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject CarPeak.Components.Classes.UserService Userservice;


<style>



    /* Centered Text Styles */
    .center-text {
        text-align: center;
        margin-top: 20vh; /* Adjust as needed to center vertically */
    }

        .center-text h1 {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 1rem;
        }

        .center-text p {
            font-size: 1.25rem;
            margin-bottom: 0.5rem;
        }






    /* Modern Styles */
    .container {
        padding: 20px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .filter-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        background-color: #f4f4f4;
        padding: 10px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        width: 75vw;
    }

    .filter-label {
        font-weight: bold;
        margin-right: 10px;
        margin-top: 13px;
    }

    .filter-input {
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ccc;
        font-size: 1rem;
    }

    .button {
        padding: 10px 20px;
        border-radius: 5px;
        border: none;
        cursor: pointer;
        font-size: 1rem;
    }

    button-size{
        width: 6vw;
        height: 5vh;
    }

    .logout-button {
        background-color: #ff4d4d;
        color: white;
        margin-left: auto;
    }

    .search-button {
        background-color: #4caf50;
        color: white;
    }

    .bookings-button{
        background-color: darkgreen;
        color: white;
    }

    .modal {
        position: fixed;
        top: 10%;
        left: 50%;
        transform: translate(-50%, 0);
        width: 32vw;
        height: 60vh;
        background-color: rgba(0, 0, 0, 0.9);
        border: solid 1px white;
        display: none;
        z-index: 200;
    }

    .modal-content {
        display: flex;
        background-color: rgba(0, 0, 0, 0.9);
        flex-direction: column;
        padding: 2vh;
        width: 32vw;
        height: 100%;
        justify-content: space-between;
    }

    .modal-image img {
        width: 30vw;
        height: 25vh;
        object-fit: cover;
    }

    .modal-details {
        display: flex;
        flex-direction: column;
        padding: 10px;
        color: white;
        font-size: 1.2rem;
    }

    .modal-actions {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 10px;
    }

    .book-button {
        background-color: #4caf50;
        color: white;
    }

    .cancel-button {
        background-color: #795548;
        color: white;
    }

    .car-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(22vw, 1fr));
        gap: 20px;
        width: 100%;
        padding: 20px;
        overflow-y: auto;
    }

    .car-card {
        display: flex;
        flex-direction: row;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        cursor: pointer;
    }

    .car-image {
        width: 50%;
        border-top-left-radius: 10px;
        border-bottom-left-radius: 10px;
    }

        .car-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
        }

    .car-details {
        display: flex;
        flex-direction: column;
        padding: 10px;
        color: #333;
        font-size: 1rem;
    }
.vertical-alignment{
    display:flex;
    flex-direction: column;
}

    .horizontal-alignment {
        display: flex;
        flex-direction: row;
    }




</style>





<div class="container">

    <div class="center-text">
        <h1>Biluthyrning – sök, jämför och spara</h1>
        <p>Gratis avbokning på de flesta bokningar</p>
        <p>Över 60 000 uthyrningsplatser</p>
        <p>Kundtjänst på fler än 40 språk</p>
    </div>

    <div class="filter-container">
        <label class="filter-label">Från</label>
        <input class="filter-input" name="DateFrom" type="date" @bind-value="booking.DateFrom" />
        <label class="filter-label">Till</label>
        <input class="filter-input" name="DateTo" type="date" @bind-value="booking.DateTo" />
        <label class="filter-label">Sittplatser</label>
        <select class="filter-input" @bind="Seats">
            <option value="0">välj</option>
            <option value="2">2</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
            <option value="8">8</option>
            <option value="9">9</option>
        </select>
        <label class="filter-label">Växellåda</label>
        <select class="filter-input" @bind="Gearbox">
            <option value="välj">välj</option>
            <option value="Manuell">Manuell</option>
            <option value="Auto">Automat</option>
        </select>
        <label class="filter-label">Stad</label>
        <select class="filter-input" @bind="city">
            <option value="välj">välj</option>
            <option value="Stockholm">Stockholm</option>
            <option value="Göteborg">Göteborg</option>
            <option value="Malmö">Malmö</option>
            <option value="Uppsala">Uppsala</option>
            <option value="Linköping">Linköping</option>
            <option value="Västerås">Västerås</option>
            <option value="Örebro">Örebro</option>
            <option value="Helsingborg">Helsingborg</option>
            <option value="Jönköping">Jönköping</option>
            <option value="Norrköping">Norrköping</option>
        </select>
        <button class="button logout-button" @onclick="LogoutClick">Logga ut</button>
        <button class="button search-button" @onclick="SearchCarsByFilter">Sök</button>
        <button class="button bookings-button" style="background-color:green" @onclick="GetMyBookedCars">Mina bokningar</button>

    </div>

    <div class="modal" style="@VisibilityStyle @PointerEventsStyle">
        @if (SelectedCar != null)
        {
            <div class="modal-content">
                <div class="modal-image">
                    <img src="/Images/@SelectedCar.ImageUrl" />
                </div>
                <div class="modal-details">
                    <label>Modell: @SelectedCar.Model</label>
                    <label>Tillverknings år: @SelectedCar.Year</label>
                    <label>Pris: @SelectedCar.PricePerDay Kr/Dag</label>
                    <label>Sittplatser: @SelectedCar.Size</label>
                    <label>Växellåda: @SelectedCar.Gearbox</label>
                    <label>Stad: @SelectedCar.City</label>
                    <label>Färg: @SelectedCar.Color</label>
                </div>
                <div class="modal-actions">
                    <button class="button book-button" @onclick="() => BookSelectedCarClick(SelectedCar)">Boka</button>
                    <button class="button cancel-button" @onclick="() => CarClicked(null)">Tillbaka</button>
                </div>
            </div>
        }
    </div>

    @if (Cars != null)
    {
        <div class="car-grid">
            @foreach (Car car in Cars)
            {
                <div class="car-card" @onclick="() => CarClicked(car)">
                    <div class="car-image">
                        <img src="/Images/@car.ImageUrl" />
                    </div>
                    <div class="car-details">
                        <label>Modell: @car.Model</label>
                        <label>Pris: @car.PricePerDay Kr/Dag</label>
                        <label>Sittplatser: @car.Size</label>
                        <label>Växellåda: @car.Gearbox</label>
                    </div>
                </div>
            }
        </div>
    }
</div>
@if (MyBookings != null)
{
    <div style="overflow-y:scroll; width: 20vw; height:60vh; background-color: rgb(0,0,0,0.9); position:fixed; top: 20%; left: 40%; @MyVisibilityStyle @MyPointerEventsStyle">
        @foreach (BookingViewModel b in MyBookings)
        {
            <div class="horizontal-alignment align-items-center border-light p-2">
                <div class="vertical-alignment">
                    <label style="color:white">Id: @b.Booking.Id</label>
                    <label style="color:white">Bil: @b.Car.Model; </label>
                    <label style="color:white">Namn @b.User.Username</label>
                    <label style="color:white">Från: @b.Booking.DateFrom</label>
                    <label style="color:white">Till: @b.Booking.DateTo</label>
                </div>
                <button class="NormalButton brown-button" @onclick="() =>CancelBooking(b.Booking.Id)">Avboka</button>
            </div>

        }
        <div class="modal-actions">
            <button class="button cancel-button" @onclick="GetMyBookedCars">Tillbaka</button>
        </div>
    </div>
}

@code {
    private int Seats;
    private string Gearbox;
    private string city;
    Booking booking = new Booking();
    private List<Car> Cars;
    private List<BookingViewModel> MyBookings;
    private Car SelectedCar;

    //Car window pointer events and visibility
    private bool isVisible = false;
    private bool arePointerEventsEnabled = false;

    private string VisibilityStyle => isVisible ? "display: block;" : "display: none;";
    private string PointerEventsStyle => arePointerEventsEnabled ? "pointer-events: auto;" : "pointer-events: none;";

    //MyBookings window pointer events and visibility
    private bool isVisibleMy = false;
    private bool arePointerEventsEnabledMy = false;

    private string MyVisibilityStyle => isVisibleMy ? "display: block;" : "display: none;";
    private string MyPointerEventsStyle => arePointerEventsEnabledMy ? "pointer-events: auto;" : "pointer-events: none;";



    public void LogoutClick()
    {
        NavigationManager.NavigateTo("/");
    }

    public void CarClicked(Car car)
    {
        isVisible = !isVisible;
        arePointerEventsEnabled = isVisible;
        SelectedCar = car;
    }

    public async void CancelBooking(int id)
    {
        await Userservice.RemoveBooking(id);
        GetMyBookedCars();
        isVisibleMy = !isVisibleMy;
        arePointerEventsEnabledMy = isVisibleMy;
        SearchCarsByFilter();
    }

    public async void BookSelectedCarClick(Car car)
    {
        booking.CarId = car.Id;
        booking.UserId = Userservice.CurrentUser.Id;
        if(AllInfoFilled(booking))
        {
            await Userservice.AddBookingAsync(booking);
            Console.WriteLine("Booked Succesfully");
            await SearchCarsByFilter();
            CarClicked(null);
        }
        else
        {
            Console.WriteLine($"Carid: {booking.CarId} UserId: {booking.UserId}");
        }

    }

    private async Task SearchCarsByFilter()
    {
        Cars = await Userservice.GetCarsByFilter(Seats,Gearbox,city,booking.DateFrom,booking.DateTo);
    }

    private async Task GetMyBookedCars()
    {
        MyBookings = await Userservice.GetMyBookings(Userservice.CurrentUser.Id);
        isVisibleMy = !isVisibleMy;
        arePointerEventsEnabledMy = isVisibleMy ;
    }

    public bool AllInfoFilled(Booking bking)
    {
        if (bking.UserId != 0 && bking.CarId != 0)
        {
            return true;
        }
        else return false;
    }
}
